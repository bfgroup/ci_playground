# Use, modification, and distribution are
# subject to the Boost Software License, Version 1.0. (See accompanying
# file LICENSE.txt)
#
# Copyright Rene Rivera 2020.

# Configuration for https://cirrus-ci.org/.

linux_task:
  env:
    ENV_TEST: ENCRYPTED[d1bbfbb409d43214239b325e4269a3e49e60bab030174f4b452d912ce5044f42b229346a785af11bab5e6103e46e9125]
  # All the GCC's and Clang's available for Ubuntu Bionic.
  matrix:
    - { name: 'Linux, GCC 10', env: { CXX: g++-10, PACKAGES: g++-10 }, container: { image: 'ubuntu:18.04' } }
    - { name: 'Linux, GCC 9', env: { CXX: g++-9, PACKAGES: g++-9 }, container: { image: 'ubuntu:18.04' } }
    - { name: 'Linux, Clang 10', env: { CXX: clang-10, PACKAGES: clang-10, LLVM_OS: bionic, LLVM_VER: 10 }, container: { image: 'ubuntu:18.04' } }
    - { name: 'Linux, Clang 9', env: { CXX: clang-9, PACKAGES: clang-9, LLVM_OS: bionic, LLVM_VER: 9 }, container: { image: 'ubuntu:18.04' } }
  # Need some extra container setup.
  setup_script: [
    "echo ${ENV_TEST} | md5sum",
    "echo 'THIS IS AN ENCRYPTED TEST' | md5sum",
    "apt-get -o Acquire::Retries=3 update && apt-get -o Acquire::Retries=3 install -y sudo software-properties-common wget apt-transport-https && rm -rf /var/lib/apt/lists/*"
    ]
  # The install runs a helper script to do the install and any setup.
  install_script: [
    "echo '==================================> INSTALL TOOLSET'",
    "uname -a",
    "./.ci_playground/linux-cxx-install.sh"
    ]
  compile_script: [
    "${CXX} --version",
    "${CXX} ${CXXFLAGS} -v src/main.cpp"
    ]

xcode_task:
  matrix:
    - { name: 'macOS, Xcode 11.4.1', env: { CXX: clang++, XCODE_VERSION: 11.4.1 }, osx_instance: { image: 'catalina-xcode-11.4.1' } }
  # Cirrus CI encrypts using a repo specific internal key. These
  # encrypted values are taken from the web UI.
  env:
    DEV_APPLE_USER: ENCRYPTED[eaff152791f8f1c1669b0e43a4f4b5227432242c625feaf325aed8b69de58f21e97b62c24e081ec745629b08d97d7b8f]
    DEV_APPLE_PASSWORD: ENCRYPTED[bf21babc88ec2a4a261e292170017c3fb97ff634fead2ed060119220eecb74e0f9ea216256664cbe8f741c39091aa4d1]
  # Restrict to our ORG as encrypted vars are ORG local. Hence forks will fail.
  only_if: $CIRRUS_REPO_OWNER == 'bfgroup'
  # We just run the common install script, as the env is already set up.
  install_script: [
    "set -e",
    "uname -a",
    "echo \"${DEV_APPLE_PASSWORD}\" | sha512sum"
    "export \"XCODE_INSTALL_USER=${DEV_APPLE_USER}\"",
    "export \"XCODE_INSTALL_PASSWORD=${DEV_APPLE_PASSWORD}\"",
    "./.ci_playground/macos-xcode-install.sh"
    ]
  # For consistent Xcode building we specify the sysroot to point to the
  # symlink that xcode-install utility created. This was we always build
  # with the specific SDK for the compiler being used.
  compile_script: [
    "set -e",
    "${CXX} --version",
    "${CXX} ${CXXFLAGS} -v --sysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk src/main.cpp"
    ]

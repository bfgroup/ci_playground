# Use, modification, and distribution are
# subject to the Boost Software License, Version 1.0. (See accompanying
# file LICENSE.txt)
#
# Copyright Rene Rivera 2020.

# Configuration for https://cirrus-ci.org/.

linux_task:
  env:
    ENV_TEST: 'THIS IS A TEST'
  # All the GCC's and Clang's available for Ubuntu Bionic.
  matrix:
    - { name: 'Linux, GCC 10', env: { CXX: g++-10, PACKAGES: g++-10 }, container: { image: 'ubuntu:18.04' } }
    - { name: 'Linux, GCC 9', env: { CXX: g++-9, PACKAGES: g++-9 }, container: { image: 'ubuntu:18.04' } }
    - { name: 'Linux, Clang 10', env: { CXX: clang-10, PACKAGES: clang-10, LLVM_OS: bionic, LLVM_VER: 10 }, container: { image: 'ubuntu:18.04' } }
    - { name: 'Linux, Clang 9', env: { CXX: clang-9, PACKAGES: clang-9, LLVM_OS: bionic, LLVM_VER: 9 }, container: { image: 'ubuntu:18.04' } }
  # Need some extra container setup.
  setup_script: [
    "echo ${ENV_TEST}",
    "apt-get -o Acquire::Retries=3 update && apt-get -o Acquire::Retries=3 install -y sudo software-properties-common wget apt-transport-https && rm -rf /var/lib/apt/lists/*"
    ]
  # The install runs a helper script to do the install and any setup.
  install_script: [
    "echo '==================================> INSTALL TOOLSET'",
    "uname -a",
    "./.ci_playground/linux-cxx-install.sh"
    ]
  compile_script: [
    "${CXX} --version",
    "${CXX} ${CXXFLAGS} -v src/main.cpp"
    ]

# env:
#   XCODE_INSTALL_USER: ENCRYPTED[!734f624899e14a0ab6f506c8c1ff9b6048b2c90cbe9e38da56b0d7b4f6e23a578a22bddfff24c87e5c93beb87cf036a7!]
#   XCODE_INSTALL_PASSWORD: ENCRYPTED[!77deeb752ec174bf3b76acb83171cc419482fdf1d288ba5473dcbf7d8014b33f1573486145429b0e6df1c3779a643d11!]

# xcode_task:
#   matrix:
#     - { name: 'macOS, Xcode 11.4.1', env: { CXX: clang++, XCODE_VERSION: 11.4.1 }, osx_instance: { image: 'catalina-xcode-11.4.1' } }
#   # Cirrus CI encrypts using a repo specific internal key. These
#   # encrypted values are taken from the web UI.
#   # Restrict to our ORG as encrypted vars are ORG local. Hence forks will fail.
#   only_if: $CIRRUS_REPO_OWNER == 'bfgroup'
#   # We just run the common install script, as the env is already set up.
#   install_script: [
#     "set -e",
#     "uname -a",
#     "./.ci_playground/macos-xcode-install.sh"
#     ]
#   # For consistent Xcode building we specify the sysroot to point to the
#   # symlink that xcode-install utility created. This was we always build
#   # with the specific SDK for the compiler being used.
#   compile_script: [
#     "set -e",
#     "${CXX} --version",
#     "${CXX} ${CXXFLAGS} -v --sysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk src/main.cpp"
#     ]
